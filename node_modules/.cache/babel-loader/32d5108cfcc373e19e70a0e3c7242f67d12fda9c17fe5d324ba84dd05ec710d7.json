{"ast":null,"code":"var _jsxFileName = \"/home/alibekabdrakhman/Desktop/klika_tz/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { DataTable, FilterComponent } from \"react-data-table-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const columns = [{\n    name: \"Исполнитель\",\n    selector: row => row.artist,\n    sortable: true\n  }, {\n    name: \"Песня\",\n    selector: row => row.name,\n    sortable: true\n  }, {\n    name: \"Жанр\",\n    selector: row => row.genre,\n    sortable: true\n  }, {\n    name: \"Год\",\n    selector: row => row.year,\n    sortable: true\n  }];\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [perPage, setPerPage] = useState(10);\n  useEffect(() => {\n    const fetchAllTracks = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8880/tracks\");\n        console.log(res);\n        setTracks(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllTracks();\n  }, []);\n  const [filterText, setFilterText] = useState('');\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\n  const filteredItems = tracks.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\n  const subHeaderComponentMemo = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText('');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(FilterComponent, {\n      onFilter: e => setFilterText(e.target.value),\n      onClear: handleClear,\n      filterText: filterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this);\n  }, [filterText, resetPaginationToggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"1000px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        title: \"Contact List\",\n        columns: columns,\n        data: filteredItems,\n        pagination: true,\n        paginationResetDefaultPage: resetPaginationToggle // optionally, a hook to reset pagination to page 1\n        ,\n        subHeader: true,\n        subHeaderComponent: subHeaderComponentMemo,\n        selectableRows: true,\n        persistTableHead: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iZAfwSSR+SNCuNfST2uJxsFBg1E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useMemo","axios","DataTable","FilterComponent","App","columns","name","selector","row","artist","sortable","genre","year","tracks","setTracks","loading","setLoading","perPage","setPerPage","fetchAllTracks","res","get","console","log","data","err","filterText","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","filter","item","toLowerCase","includes","subHeaderComponentMemo","handleClear","e","target","value","width"],"sources":["/home/alibekabdrakhman/Desktop/klika_tz/client/src/App.js"],"sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { DataTable, FilterComponent } from \"react-data-table-component\";\n\nfunction App() {\n  const columns = [\n    {\n      name: \"Исполнитель\",\n      selector: (row) => row.artist,\n      sortable: true,\n    },\n    {\n      name: \"Песня\",\n      selector: (row) => row.name,\n      sortable: true,\n    },\n    {\n      name: \"Жанр\",\n      selector: (row) => row.genre,\n      sortable: true,\n    },\n    {\n      name: \"Год\",\n      selector: (row) => row.year,\n      sortable: true,\n    },\n  ];\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [perPage, setPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchAllTracks = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8880/tracks\");\n        console.log(res);\n        setTracks(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllTracks();\n  }, []);\n  const [filterText, setFilterText] = useState('');\n\tconst [resetPaginationToggle, setResetPaginationToggle] = useState(false);\n\tconst filteredItems = tracks.filter(\n\t\titem => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()),\n\t);\n\n\tconst subHeaderComponentMemo = useMemo(() => {\n\t\tconst handleClear = () => {\n\t\t\tif (filterText) {\n\t\t\t\tsetResetPaginationToggle(!resetPaginationToggle);\n\t\t\t\tsetFilterText('');\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />\n\t\t);\n\t}, [filterText, resetPaginationToggle]);\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          width: \"1000px\",\n        }}\n      >\n        <DataTable\n          title=\"Contact List\"\n          columns={columns}\n          data={filteredItems}\n          pagination\n          paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\n          subHeader\n          subHeaderComponent={subHeaderComponentMemo}\n          selectableRows\n          persistTableHead\n          \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}